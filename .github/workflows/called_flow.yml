name: called_flow

on:
  workflow_call:
    inputs:
      user_name:
        required: true
        type: string  
#       dir:
#         required: true
#         type: string  
      flag1: 
        required: true
        type: boolean  
      flag2: 
        required: true
        type: boolean 

env:
  user_name1: ${{ github.event.inputs.user_name }}
  user_name2: ${{ inputs.user_name }}
  flag1: ${{ inputs.flag1 }}
  flag2: ${{ inputs.flag2 }}
  flag11: ${{ github.event.inputs.flag1 }}
  flag12: ${{ inputs.flag1 }}
  flag21: ${{ github.event.inputs.flag2 }}
  flag22: ${{ inputs.flag2 }}
#   dir: ${{ inputs.dir }}

# defaults:
#   run:
#     working-directory: dir1   # gh-actions-test/dir1'. No such file or directory


# defaults:
#   run:
#     working-directory: "${dir}"
#     working-directory: "${dir}"           ...gh-actions-test/${dir}'. No such file or directory
#    working-directory: ${dir}            ...gh-actions-test/${dir}'. No such file or directory
#    working-directory: "${{ env.dir }}"  # Unrecognized named-value: 'env'. Located at position 1 within expression: env.dir
#   working-directory: "${{ inputs.dir }}"  # Unrecognized named-value: 'inputs'. Located at position 1 within expression: inputs.dir
#   working-directory: ${{ inputs.dir }}   # Unrecognized named-value: 'inputs'. Located at position 1 within expression: inputs.dir
#   working-directory: ${dir}               # special_work_dir


jobs:
  contexts:
    runs-on: ubuntu-latest
    steps:
      - run: |
          pwd
          ls
          echo github.event.inputs.user_name ${{ github.event.inputs.user_name }}
          echo inputs.user_name ${{ inputs.user_name }}
          echo env.user_name1 ${{ env.user_name1 }}
          echo env.user_name2 ${{ env.user_name2 }}
          echo 
          echo github.event.inputs.flag1 ${{ github.event.inputs.flag1 }}
          echo inputs.flag1 ${{ inputs.flag1 }}
          echo 
          echo github.event.inputs.flag2 ${{ github.event.inputs.flag2 }}
          echo inputs.flag2 ${{ inputs.flag2 }}
          echo 
          echo inputs.flag1 ${{ inputs.flag1 }}
          echo inputs.flag1 == true: ${{ inputs.flag1 == true }}
          echo inputs.flag1 == false: ${{ inputs.flag1 == false }}
          echo inputs.flag1 ${{ inputs.flag1 }}
          echo 
          echo inputs.flag2 ${{ inputs.flag2 }}
          echo inputs.flag2 == true: ${{ inputs.flag2 == true }}
          echo inputs.flag2 == false: ${{ inputs.flag2 == false }}
          echo inputs.flag2 ${{ inputs.flag2 }}
          echo 
          echo flag1: ${{ env.flag1 }}
          echo env.flag1: ${{ env.flag1 }}
          echo env.flag1 == true: ${{ env.flag1 == true }}
          cond=${{ env.flag1 }}
          echo cond "$cond"
          if [ "${cond}" == "true" ]; then
            echo Y Production...
          else
            echo N develop...
          fi
          echo cond "$cond"

          if [ "${{ env.flag1 }}" == "true" ]; then
            echo env.flag1 Yes Production...
          else
            echo env.flag1 No develop...
          fi
          echo cond "$cond"
          echo 
          if [ ${{ env.flag1 }} == "true" ]; then
            echo env.flag1 Yes 2 Production...
          else
            echo env.flag1 No 2 develop...
          fi
          echo cond "$cond"



          echo completed.          
          echo flag1: ${{ env.flag1 }}
          echo env.flag1: ${{ env.flag1 }}
          echo -----------------------
